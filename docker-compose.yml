networks:
  frontend:
    driver: bridge
  backend:
    driver: bridge
volumes:
  mysql:
    driver: local
  percona:
    driver: local
  mssql:
    driver: local
  postgres:
    driver: local
  memcached:
    driver: local
  redis:
    driver: local
  neo4j:
    driver: local
  mariadb:
    driver: local
  mongo:
    driver: local
  minio:
    driver: local
  rethinkdb:
    driver: local
  phpmyadmin:
    driver: local
  adminer:
    driver: local
  confluence:
    driver: local
  sonarqube:
    driver: local
  cassandra:
    driver: local
  graylog:
    driver: local
  docker-in-docker:
    driver: local

services:

### Workspace Utilities ##################################
    workspace:
      build:
        context: ./workspace
        args:
          - CHANGE_SOURCE=false
          - SHELL_OH_MY_ZSH=false
          - SHELL_OH_MY_ZSH_AUTOSUGESTIONS=false
          - SHELL_OH_MY_ZSH_ALIASES=false
          - BASE_IMAGE_TAG_PREFIX=latest
          - LARADOCK_PHP_VERSION=8.0
          - LARADOCK_PHALCON_VERSION=4.0.5
          - INSTALL_SUBVERSION=false
          - INSTALL_BZ2=false
          - INSTALL_GMP=false
          - INSTALL_GNUPG=false
          - INSTALL_XDEBUG=false
          - INSTALL_PCOV=false
          - INSTALL_PHPDBG=false
          - INSTALL_BLACKFIRE=false
          - INSTALL_SSH2=false
          - INSTALL_SOAP=false
          - INSTALL_XSL=false
          - INSTALL_LDAP=false
          - INSTALL_SMB=false
          - INSTALL_IMAP=false
          - INSTALL_MONGO=false
          - INSTALL_AMQP=false
          - INSTALL_CASSANDRA=false
          - INSTALL_ZMQ=false
          - INSTALL_GEARMAN=false
          - INSTALL_PHPREDIS=true
          - INSTALL_MSSQL=false
          - NVM_NODEJS_ORG_MIRROR=
          - INSTALL_NODE=true
          - NPM_REGISTRY=
          - NPM_FETCH_RETRIES=2
          - NPM_FETCH_RETRY_FACTOR=10
          - NPM_FETCH_RETRY_MINTIMEOUT=10000
          - NPM_FETCH_RETRY_MAXTIMEOUT=60000
          - INSTALL_PNPM=false
          - INSTALL_YARN=true
          - INSTALL_NPM_GULP=true
          - INSTALL_NPM_BOWER=false
          - INSTALL_NPM_VUE_CLI=true
          - INSTALL_NPM_ANGULAR_CLI=false
          - INSTALL_DRUSH=false
          - INSTALL_WP_CLI=false
          - INSTALL_DRUPAL_CONSOLE=false
          - INSTALL_AEROSPIKE=false
          - INSTALL_OCI8=false
          - INSTALL_V8JS=false
          - COMPOSER_GLOBAL_INSTALL=true
          - COMPOSER_VERSION=2
          - COMPOSER_AUTH_JSON=false
          - COMPOSER_REPO_PACKAGIST=
          - INSTALL_WORKSPACE_SSH=false
          - INSTALL_LARAVEL_ENVOY=false
          - INSTALL_LARAVEL_INSTALLER=false
          - INSTALL_XLSWRITER=false
          - INSTALL_DEPLOYER=false
          - INSTALL_PRESTISSIMO=false
          - INSTALL_LINUXBREW=false
          - INSTALL_MC=false
          - INSTALL_SYMFONY=false
          - INSTALL_PYTHON=false
          - INSTALL_PYTHON3=false
          - INSTALL_IMAGE_OPTIMIZERS=false
          - INSTALL_IMAGEMAGICK=false
          - INSTALL_TERRAFORM=false
          - INSTALL_DUSK_DEPS=false
          - INSTALL_PG_CLIENT=false
          - INSTALL_PHALCON=false
          - INSTALL_SWOOLE=false
          - INSTALL_TAINT=false
          - INSTALL_LIBPNG=false
          - INSTALL_GRAPHVIZ=false
          - INSTALL_IONCUBE=false
          - INSTALL_MYSQL_CLIENT=false
          - INSTALL_PING=false
          - INSTALL_SSHPASS=false
          - INSTALL_INOTIFY=false
          - INSTALL_FSWATCH=false
          - INSTALL_AST=true
          - INSTALL_YAML=false
          - INSTALL_RDKAFKA=false
          - INSTALL_MAILPARSE=false
          - INSTALL_GIT_PROMPT=false
          - INSTALL_XMLRPC=false
          - PUID=1000
          - PGID=1000
          - CHROME_DRIVER_VERSION=2.42
          - NODE_VERSION=node
          - YARN_VERSION=latest
          - DRUSH_VERSION=8.4.6
          - AST_VERSION=1.0.10
          - IMAGEMAGICK_VERSION=latest
          - TZ=UTC
          - BLACKFIRE_CLIENT_ID=<client_id>
          - BLACKFIRE_CLIENT_TOKEN=<client_token>
          - INSTALL_POWERLINE=false
          - INSTALL_SUPERVISOR=false
          - INSTALL_FFMPEG=false
          - INSTALL_AUDIOWAVEFORM=false
          - INSTALL_WKHTMLTOPDF=false
          - INSTALL_GNU_PARALLEL=false
          - INSTALL_LNAV=false
          - INSTALL_PROTOC=false
          - INSTALL_PHPDECIMAL=false
          - INSTALL_ZOOKEEPER=false
          - INSTALL_SSDB=false
          - INSTALL_TRADER=false
          - PROTOC_VERSION=latest
          - INSTALL_DOCKER_CLIENT=false
          - INSTALL_MEMCACHED=true
          - http_proxy
          - https_proxy
          - no_proxy
      volumes:
        - ../:/var/www:cached
        - docker-in-docker:/certs/client
        - ./php-worker/supervisord.d:/etc/supervisord.d
      extra_hosts:
        - "dockerhost:"
      ports:
        - "2222:22"
        - "3000:3000"
        - "3001:3001"
        - "8080:8080"
        - "8001:8000"
        - "4200:4200"
      tty: true
      environment:
        - PHP_IDE_CONFIG=
        - DOCKER_HOST=tcp://docker-in-docker:2376
        - DOCKER_TLS_VERIFY=1
        - DOCKER_TLS_CERTDIR=/certs
        - DOCKER_CERT_PATH=/certs/client
        - CHOKIDAR_USEPOLLING=true
      networks:
        - frontend
        - backend
      links:
        - docker-in-docker

### PHP-FPM ##############################################
    php-fpm:
      build:
        context: ./php-fpm
        args:
          - CHANGE_SOURCE=false
          - BASE_IMAGE_TAG_PREFIX=
          - LARADOCK_PHP_VERSION=8.0
          - LARADOCK_PHALCON_VERSION=4.0.5
          - INSTALL_BZ2=
          - INSTALL_ENCHANT=
          - INSTALL_GMP=
          - INSTALL_GNUPG=
          - INSTALL_XDEBUG=
          - INSTALL_PCOV=
          - INSTALL_PHPDBG=
          - INSTALL_BLACKFIRE=false
          - INSTALL_SSH2=
          - INSTALL_SOAP=
          - INSTALL_XSL=
          - INSTALL_SMB=
          - INSTALL_IMAP=
          - INSTALL_MONGO=
          - INSTALL_AMQP=
          - INSTALL_CASSANDRA=
          - INSTALL_ZMQ=
          - INSTALL_GEARMAN=
          - INSTALL_MSSQL=
          - INSTALL_BCMATH=
          - INSTALL_PHPREDIS=
          - INSTALL_MEMCACHED=
          - INSTALL_OPCACHE=
          - INSTALL_EXIF=
          - INSTALL_AEROSPIKE=
          - INSTALL_OCI8=
          - INSTALL_MYSQLI=
          - INSTALL_PGSQL=
          - INSTALL_PG_CLIENT=
          - INSTALL_POSTGIS=
          - INSTALL_INTL=
          - INSTALL_GHOSTSCRIPT=
          - INSTALL_LDAP=
          - INSTALL_PHALCON=
          - INSTALL_SWOOLE=
          - INSTALL_TAINT=
          - INSTALL_IMAGE_OPTIMIZERS=
          - INSTALL_IMAGEMAGICK=
          - INSTALL_CALENDAR=
          - INSTALL_XLSWRITER=
          - INSTALL_FAKETIME=
          - INSTALL_IONCUBE=
          - INSTALL_APCU=
          - INSTALL_CACHETOOL=
          - INSTALL_YAML=
          - INSTALL_RDKAFKA=
          - INSTALL_GETTEXT=
          - INSTALL_ADDITIONAL_LOCALES=
          - INSTALL_MYSQL_CLIENT=
          - INSTALL_PING=
          - INSTALL_SSHPASS=
          - INSTALL_MAILPARSE=
          - INSTALL_PCNTL=
          - ADDITIONAL_LOCALES=
          - INSTALL_FFMPEG=
          - INSTALL_AUDIOWAVEFORM=
          - INSTALL_WKHTMLTOPDF=
          - INSTALL_XHPROF=
          - INSTALL_XMLRPC=
          - INSTALL_PHPDECIMAL=
          - INSTALL_ZOOKEEPER=
          - INSTALL_SSDB=
          - INSTALL_TRADER=
          - DOWNGRADE_OPENSSL_TLS_AND_SECLEVEL=false
          - PUID=
          - PGID=
          - IMAGEMAGICK_VERSION=
          - LOCALE=
          - PHP_FPM_NEW_RELIC=
          - PHP_FPM_NEW_RELIC_KEY=
          - PHP_FPM_NEW_RELIC_APP_NAME=
          - INSTALL_DOCKER_CLIENT=
          - http_proxy
          - https_proxy
          - no_proxy
      volumes:
        - ./php-fpm/php8.0.ini:/usr/local/etc/php/php.ini
        - ../:/var/www:cached
        - docker-in-docker:/certs/client
      ports:
        - ":9003"
      expose:
        - "9000"
      extra_hosts:
        - "dockerhost:"
      environment:
        - PHP_IDE_CONFIG=
        - DOCKER_HOST=tcp://docker-in-docker:2376
        - DOCKER_TLS_VERIFY=1
        - DOCKER_TLS_CERTDIR=/certs
        - DOCKER_CERT_PATH=/certs/client
        - FAKETIME=
      depends_on:
        - workspace
      networks:
        - backend

### PHP Worker ############################################
    php-worker:
      build:
        context: ./php-worker
        args:
          - CHANGE_SOURCE=false
          - LARADOCK_PHP_VERSION=8.0
          - PHALCON_VERSION=4.0.5
          - INSTALL_BZ2=
          - INSTALL_GD=
          - INSTALL_IMAGEMAGICK=
          - INSTALL_GMP=
          - INSTALL_GNUPG=
          - INSTALL_LDAP=
          - INSTALL_PGSQL=
          - INSTALL_MONGO=
          - INSTALL_BCMATH=
          - INSTALL_MEMCACHED=
          - INSTALL_OCI8=
          - INSTALL_MSSQL=
          - INSTALL_PHALCON=
          - INSTALL_XLSWRITER=
          - INSTALL_SOAP=
          - INSTALL_ZIP_ARCHIVE=
          - INSTALL_MYSQL_CLIENT=
          - INSTALL_AMQP=
          - INSTALL_CASSANDRA=
          - INSTALL_GEARMAN=
          - INSTALL_GHOSTSCRIPT=
          - INSTALL_SWOOLE=
          - INSTALL_TAINT=
          - INSTALL_FFMPEG=
          - INSTALL_AUDIOWAVEFORM=
          - INSTALL_REDIS=
          - INSTALL_IMAP=
          - INSTALL_XMLRPC=
          - INSTALL_SSDB=
          - PUID=
          - PGID=
          - IMAGEMAGICK_VERSION=
      volumes:
        - ../:/var/www:cached
        - ./php-worker/supervisord.d:/etc/supervisord.d
      depends_on:
        - workspace
      extra_hosts:
        - "dockerhost:"
      networks:
        - backend
### Laravel Horizon ############################################
    laravel-horizon:
      build:
        context: ./laravel-horizon
        args:
          - CHANGE_SOURCE=false
          - LARADOCK_PHP_VERSION=8.0
          - INSTALL_BZ2=false
          - INSTALL_GD=false
          - INSTALL_GMP=false
          - INSTALL_GNUPG=false
          - INSTALL_LDAP=false
          - INSTALL_IMAGEMAGICK=false
          - INSTALL_PGSQL=
          - INSTALL_ZIP_ARCHIVE=false
          - INSTALL_BCMATH=
          - INSTALL_MEMCACHED=
          - INSTALL_SOCKETS=false
          - INSTALL_YAML=false
          - INSTALL_CASSANDRA=false
          - INSTALL_PHPREDIS=false
          - INSTALL_MONGO=false
          - INSTALL_FFMPEG=false
          - INSTALL_AUDIOWAVEFORM=false
          - PUID=1000
          - PGID=1000
          - IMAGEMAGICK_VERSION=latest
      volumes:
        - ../:/var/www
        - ./laravel-horizon/supervisord.d:/etc/supervisord.d
      depends_on:
        - workspace
      extra_hosts:
        - "dockerhost:"
      networks:
        - backend

### NGINX Server #########################################
    nginx:
      build:
        context: ./nginx
        args:
          - CHANGE_SOURCE=false
          - PHP_UPSTREAM_CONTAINER=php-fpm
          - PHP_UPSTREAM_PORT=9000
          - http_proxy
          - https_proxy
          - no_proxy
      volumes:
        - ../:/var/www:cached
        - ./logs/nginx/:/var/log/nginx
        - ./nginx/sites/:/etc/nginx/sites-available
        - ./nginx/ssl/:/etc/nginx/ssl
      ports:
        - "80:80"
        - "443:443"
        - "81:81"
      depends_on:
        - php-fpm
      networks:
        - frontend
        - backend

### OpenResty Server #########################################
    openresty:
      build:
        context: ./openresty
        args:
          - CHANGE_SOURCE=false
          - PHP_UPSTREAM_CONTAINER=
          - PHP_UPSTREAM_PORT=
          - http_proxy
          - https_proxy
          - no_proxy
      volumes:
        - ../:/var/www:cached
        - :/var/log/nginx
        - :/etc/nginx/sites-available
        - :/etc/nginx/ssl
      ports:
        - ":80"
        - ":443"
        - "81:81"
      depends_on:
        - php-fpm
      networks:
        - frontend
        - backend

### Blackfire ########################################
    blackfire:
      image: blackfire/blackfire
      environment:
        - BLACKFIRE_SERVER_ID=<server_id>
        - BLACKFIRE_SERVER_TOKEN=<server_token>
      depends_on:
        - php-fpm
      networks:
        - backend

### Apache Server ########################################
    apache2:
      build:
        context: ./apache2
        args:
          - PHP_UPSTREAM_CONTAINER=php-fpm
          - PHP_UPSTREAM_PORT=9000
          - PHP_UPSTREAM_TIMEOUT=60
          - DOCUMENT_ROOT=/var/www/
          - APACHE_INSTALL_HTTP2=false
      volumes:
        - ../:/var/www:cached
        - ./logs/apache2:/var/log/apache2
        - ./apache2/sites:/etc/apache2/sites-available
        - ./apache2/ssl/:/etc/apache2/ssl
      ports:
        - "80:80"
        - "443:443"
      depends_on:
        - php-fpm
      networks:
        - frontend
        - backend

### HHVM #################################################
    hhvm:
      build: ./hhvm
      volumes:
        - ../:/var/www:cached
      expose:
        - "9000"
      depends_on:
        - workspace
      networks:
        - frontend
        - backend

### Minio ################################################
    minio:
      build: ./minio
      volumes:
        - /home/mxadmin/.laradock/data/minio/data:/export
        - /home/mxadmin/.laradock/data/minio/config:/root/.minio
      ports:
        - "9000:9000"
        - "9001:9001"
      environment:
        - MINIO_ROOT_USER=laradock
        - MINIO_ROOT_PASSWORD=laradock
      networks:
        - frontend
        - backend

### MySQL ################################################
    mysql:
      build:
        context: ./mysql
        args:
          - MYSQL_VERSION=latest
      environment:
        - MYSQL_DATABASE=default
        - MYSQL_USER=default
        - MYSQL_PASSWORD=secret
        - MYSQL_ROOT_PASSWORD=root
        - TZ=UTC
      volumes:
        - /home/mxadmin/.laradock/data/mysql:/var/lib/mysql
        - ./mysql/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
      ports:
        - "3306:3306"
      networks:
        - backend

### Percona ################################################
    percona:
      build:
        context: ./percona
      environment:
        - MYSQL_DATABASE=
        - MYSQL_USER=
        - MYSQL_PASSWORD=
        - MYSQL_ROOT_PASSWORD=
      volumes:
        - /home/mxadmin/.laradock/data/percona:/var/lib/mysql
        - :/docker-entrypoint-initdb.d
      ports:
        - ":3306"
      networks:
        - backend

### MSSQL ################################################
    mssql:
      build:
        context: ./mssql
      environment:
        - MSSQL_PID=Express
        - MSSQL_DATABASE=master
        - SA_PASSWORD=yourStrong(!)Password
        - ACCEPT_EULA=Y
      volumes:
        - mssql:/var/opt/mssql
      ports:
        - "1433:1433"
      networks:
        - backend

### MariaDB ##############################################
    mariadb:
      build:
        context: ./mariadb
        args:
          - http_proxy
          - https_proxy
          - no_proxy
          - MARIADB_VERSION=latest
      volumes:
        - /home/mxadmin/.laradock/data/mariadb:/var/lib/mysql
        - ./mariadb/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
      ports:
        - "3306:3306"
      environment:
        - TZ=UTC
        - MYSQL_DATABASE=default
        - MYSQL_USER=default
        - MYSQL_PASSWORD=secret
        - MYSQL_ROOT_PASSWORD=root
      networks:
        - backend

### MongoDB ##############################################
    mongo:
      build: ./mongo
      ports:
        - "27017:27017"
      environment:
        - MONGO_INITDB_ROOT_USERNAME=root
        - MONGO_INITDB_ROOT_PASSWORD=example
      volumes:
        - /home/mxadmin/.laradock/data/mongo:/data/db
        - /home/mxadmin/.laradock/data/mongo_config:/data/configdb
      networks:
        - backend

### RethinkDB ##############################################
    rethinkdb:
      build: ./rethinkdb
      ports:
        - ":8080"
      volumes:
        - /home/mxadmin/.laradock/data/rethinkdb:/data/rethinkdb_data
      networks:
        - backend

  
  ### Redis ################################################
    redis:
      build: ./redis
      volumes:
        - /home/mxadmin/.laradock/data/redis:/data
      command: --requirepass 
      ports:
        - ":6379"
      networks:
        - backend

### Redis Cluster ##########################################
    redis-cluster:
      build: ./redis-cluster
      ports:
        - ":7000-7005"
      networks:
        - backend
### SSDB ################################################
    ssdb:
      build: ./ssdb
      volumes:
        - /home/mxadmin/.laradock/data/ssdb:/data
      ports:
        - "16801:8888"
      networks:
        - backend



### Memcached ############################################
    memcached:
      build: ./memcached
      volumes:
        - /home/mxadmin/.laradock/data/memcached:/var/lib/memcached
      ports:
        - "11211:11211"
      depends_on:
        - php-fpm
      networks:
        - backend

### RabbitMQ #############################################
    rabbitmq:
      build: ./rabbitmq
      ports:
        - ":5672"
        - ":15672"
        - ":15671"
        - ":15674"
      privileged: true
      hostname: laradock-rabbitmq
      volumes:
        - /home/mxadmin/.laradock/data/rabbitmq:/var/lib/rabbitmq
        - ./rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
        - ./rabbitmq/management_agent.disable_metrics_collector.conf:/etc/rabbitmq/conf.d/management_agent.disable_metrics_collector.conf
      depends_on:
        - php-fpm
      networks:
        - backend


### phpMyAdmin ###########################################
    phpmyadmin:
      build: ./phpmyadmin
      environment:
        - PMA_ARBITRARY=1
        - MYSQL_USER=
        - MYSQL_PASSWORD=
        - MYSQL_ROOT_PASSWORD=
        - MAX_EXECUTION_TIME=
        - MEMORY_LIMIT=
        - UPLOAD_LIMIT=
      ports:
        - ":80"
      depends_on:
        - ""
      networks:
        - frontend
        - backend

### Adminer ###########################################
    adminer:
      build:
        context: ./adminer
        args:
          - INSTALL_MSSQL=false
      environment:
          - ADMINER_PLUGINS=
          - ADMINER_DESIGN=pepa-linha
          - ADMINER_DEFAULT_SERVER=mysql
      ports:
        - "8081:8080"
      depends_on:
        - php-fpm
      networks:
        - frontend
        - backend


### Certbot #########################################
    certbot:
      build:
        context: ./certbot
      volumes:
        - ./data/certbot/certs/:/var/certs
        - ./certbot/letsencrypt/:/var/www/letsencrypt
      environment:
        - CN="fake.domain.com"
        - EMAIL="fake.email@gmail.com"
      networks:
        - frontend

### MailCatcher ################################################
    mailcatcher:
      build: ./mailcatcher
      ports:
        - "1025:1025"
        - "1080:1080"
      networks:
        - frontend
        - backend

### Mailhog ################################################
    mailhog:
      build: ./mailhog
      ports:
        - "1025:1025"
        - "8025:8025"
      networks:
        - frontend
        - backend

### MailDev ##############################################
    maildev:
      build: ./maildev
      ports:
        - "1080:80"
        - "25:25"
      networks:
        - frontend
        - backend


### Laravel Echo Server #######################################
    laravel-echo-server:
      build:
        context: ./laravel-echo-server
        args:
          - CHANGE_SOURCE=false
      volumes:
        - ./laravel-echo-server/laravel-echo-server.json:/app/laravel-echo-server.json:ro
      ports:
        - "6001:6001"
      links:
        - redis
      networks:
        - frontend
        - backend


### JupyterHub #########################################
    jupyterhub:
      build:
        context: ./jupyterhub
      depends_on:
        - postgres
        - jupyterhub-user
      volumes:
        - /var/run/docker.sock:/var/run/docker.sock:rw
        - /home/mxadmin/.laradock/data/jupyterhub/:/data
        - ./jupyterhub/jupyterhub_config.py:/jupyterhub_config.py
        - /jupyterhub:/user-data
        - ./jupyterhub/userlist:/userlist
      networks:
        - backend
      ports:
        - "9991:80"
      environment:
        - TERM=xterm
        - JUPYTERHUB_USER_DATA=/jupyterhub
        - JUPYTERHUB_POSTGRES_DB=laradock_jupyterhub
        - JUPYTERHUB_POSTGRES_USER=laradock_jupyterhub
        - JUPYTERHUB_POSTGRES_HOST=postgres
        - JUPYTERHUB_POSTGRES_PASSWORD=laradock_jupyterhub
        - JUPYTERHUB_OAUTH_CALLBACK_URL=http://laradock:9991/hub/oauth_callback
        - JUPYTERHUB_OAUTH_CLIENT_ID={GITHUB_CLIENT_ID}
        - JUPYTERHUB_OAUTH_CLIENT_SECRET={GITHUB_CLIENT_SECRET}
        - JUPYTERHUB_LOCAL_NOTEBOOK_IMAGE=laradock_jupyterhub-user
        - JUPYTERHUB_ENABLE_NVIDIA=false
    jupyterhub-user:
      build:
        context: ./jupyterhub
        dockerfile: Dockerfile.user
      command: ["sh", "-c", "echo \"build only\""]

### IPython #########################################
    ipython-controller:
      build:
        context: ./ipython
        dockerfile: Dockerfile.controller
      networks:
        - backend
      extra_hosts:
        - "laradock-ipython:127.0.0.1"
      ports:
        - "33327-33338:33327-33338"
    ipython-engine:
      build:
        context: ./ipython
        dockerfile: Dockerfile.engine
      networks:
        - backend
      extra_hosts:
        - "laradock-ipython:127.0.0.1"

### Docker-in-Docker ################################################
    docker-in-docker:
      image: docker:20.10-dind
      environment:
        DOCKER_TLS_SAN: DNS:docker-in-docker
      privileged: true
      volumes:
        - ../:/var/www
        - docker-in-docker:/certs/client
      expose:
        - 2375
      networks:
        - backend

### NetData ################################################
    netdata:
      image: netdata/netdata:latest
      cap_add:
        - SYS_PTRACE
      volumes:
        - /proc:/host/proc:ro
        - /sys:/host/sys:ro
        - /var/run/docker.sock:/var/run/docker.sock:ro
      ports:
        - "19999:19999"
      networks:
        - backend

### REDISWEBUI ################################################
    redis-webui:
      build:
        context: ./redis-webui
      environment:
        - ADMIN_USER=
        - ADMIN_PASS=
        - REDIS_1_HOST=
        - REDIS_1_PORT=
      networks:
        - backend
      ports:
        - ":80"
      depends_on:
        - redis

### MongoWebUI ################################################
    mongo-webui:
      build:
        context: ./mongo-webui
      environment:
        - ROOT_URL=http://localhost
        - MONGO_URL=mongodb://mongo:27017/
        - INSTALL_MONGO=false
      volumes:
        - /home/mxadmin/.laradock/data/mongo-webui:/data/db
      ports:
        - "3000:3000"
      networks:
        - backend
      depends_on:
        - mongo

### Metabase #################################################
    metabase:
      image: metabase/metabase:latest
      environment:
        - MB_DB_FILE=/metabase-data/metabase.db
      ports:
        - 3030:3000
      volumes:
        - /home/mxadmin/.laradock/data/metabase-data:/metabase-data
      networks:
        - backend

### Weaver (Athena PDF) #################################################
    weaver:
      image: arachnysdocker/athenapdf-service
      ports:
        - "8080:8080"
      env_file:
        - ./weaver/conf/sample.env
      networks:
        - backend
      depends_on:
        - workspace

### IDE-THEIA ################################################
    ide-theia:
      build:
        context: ./ide-theia
      volumes:
        - ../:/home/project
      ports:
        - "987:3000"
      networks:
        - backend

### IDE-WEBIDE ################################################
    ide-webide:
      build:
        context: ./ide-webide
      volumes:
        - /home/mxadmin/.laradock/data/ide/webide/ide.db:/root/.coding-ide/ide.db
      ports:
        - "984:8080"
      networks:
        - backend

### IDE-CODIAD ################################################
    ide-codiad:
      build:
        context: ./ide-codiad
      environment:
        - APP_CODE_PATH_CONTAINER=/var/www
        - TZ=UTC
        - PGID=1000
        - PUID=1000
      volumes:
        - /etc/localtime:/etc/localtime:ro
        - ../:/var/www
        - /home/mxadmin/.laradock/data/ide/codiad:/config
      ports:
        - "985:80"
      networks:
        - backend

### DOCKER-REGISTRY ################################################
    docker-registry:
      build:
        context: ./docker-registry
      volumes:
        - /etc/localtime:/etc/localtime:ro
        - /home/mxadmin/.laradock/data/docker-registry:/var/lib/registry
      ports:
        - "5000:5000"
      networks:
        - backend

### DOCKER-WEB-UI ################################################
    docker-web-ui:
      build:
        context: ./docker-web-ui
      environment:
        - TZ=UTC
        - ENV_DOCKER_REGISTRY_HOST=docker-registry
        - ENV_DOCKER_REGISTRY_PORT=5000
        - ENV_DOCKER_REGISTRY_USE_SSL=0
        - ENV_MODE_BROWSE_ONLY=false
      volumes:
        - /etc/localtime:/etc/localtime:ro
      ports:
        - "8754:80"
      networks:
        - frontend
        - backend


### SWAGGER EDITOR ############################################
    swagger-editor:
      build: ./swagger-editor
      ports:
        - 5151:8080
      networks:
        - backend

### SWAGGER UI ################################################
    swagger-ui:
      build: ./swagger-ui
      environment:
        - API_URL=http://generator.swagger.io/api/swagger.json
      ports:
        - 5555:8080
      networks:
        - backend


